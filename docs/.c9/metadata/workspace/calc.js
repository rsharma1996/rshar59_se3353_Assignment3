{"filter":false,"title":"calc.js","tooltip":"/calc.js","undoManager":{"mark":49,"position":49,"stack":[[{"start":{"row":0,"column":0},"end":{"row":210,"column":0},"action":"remove","lines":["// JavaScript File","  var hasPointer=false;","var num = \"\";","var stack = [];","var infixStack=[];","var prevValue=\"\";","var display = \"\"; ","var tempStack=[];","var postfixString=\"\";","var postfixStack=[];","","","function isOperator(x){","  if(x==\"-\"||x==\"+\"||x==\"X\"||x==\"/\"){","    return 1;","  }","  else return 0;","}","","function isEquals(x){","  if(x==\"=\"){","    return 1;","  }","  else return 0;","}","","function isNumber(x){","  if(x==\"1\"||x==\"2\"||x==\"3\"||x==\"4\"||x==\"5\"||x==\"6\"||x==\"7\"||x==\"8\"||x==\"9\"||x==\"0\"){","    return 1;","  }","  else return 0;","}","","function IsMultiplyOrDivide(x){","\tif(x==\"/\"||x==\"X\"){","\t\treturn true;","\t}","\telse{","\t\treturn false;","\t}","}","","function returnPrecedence(x){","  switch(x){","    case \"+\":","      return 1;","      break;","      ","    case \"-\":","      return 1;","      break;","    case \"X\":","      return 2;","      break;","    case \"/\":","      return 2;","      break;","  }","}","/*Evaluates two operators and returns the result*/","function evaluate(op1,op2,operator){","\tconsole.log(\"Op1,Op2,operator\"+op1,op2,operator);","  switch(operator){","    case \"+\":","      return parseFloat(op1)+parseFloat(op2);","      break;","    case \"-\":","      return parseFloat(op1)-parseFloat(op2);","      break;","    case \"/\":","      return parseFloat(op1)/parseFloat(op2);","      break;","    case \"X\":","      return parseFloat(op1)*parseFloat(op2);","      break;","  }","}","","/*The display function, it needs to be specially handled as the text box is not able to display numbers larger than 15 digits*/","function displayOutput(stack){","\t\tif(stack.length<=15){","\t\t\t$(\"#output-text\").val(stack.join(\"\"));","\t\t}","\t\telse{","\t\t\t$(\"#output-text\").val(stack.join(\"\").slice(stack.length-15,stack.length));","\t\t}","}","/*The main logic for handling the clicks on the calculator*/","$(\".flex-wrapper\").click(function(e) {","  var idClicked = e.target.id;","  var value = $(\"#\" + idClicked).attr(\"value\");","  /*To handle the unexpected clicks in between the buttons*/","  if (value != undefined) {","    prevValue=stack[stack.length-1];","\t\t/*Switching through different cases*/","\t\tswitch(value){","\t\t\tcase \"=\":","\t\t\t\tvar tempNum=\"\";","\t\t\t\tvar result=\"\";","\t\t\t\t/*Handling invalid cases such as ","\t\t\t\t1. If the end of the input is an operator or a decimal point","\t\t\t\t2. If the input length is zero, which is caused by direct clicking of the equals button","\t\t\t\t3. To eliminate case such as / or * being prefix for a number in calculation and allow numbers such as +3 and -3","\t\t\t\t*/","\t\t\t\tif(isOperator(stack[stack.length-1])||stack[stack.length-1]==\".\"||stack.length==0||IsMultiplyOrDivide(stack[0])){","\t\t\t\t\tresult=0;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t/*With the input received, generating the infix stack, as the input from humans are always infix*/","\t\t\t\t\tfor(var i=0;i<stack.length;i++){","\t\t\t\t\t\tif(!isOperator(stack[i])||i==0){","\t\t\t\t\t\t\ttempNum=tempNum+stack[i];","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tinfixStack.push(parseFloat(tempNum));","\t\t\t\t\t\t\tinfixStack.push(stack[i]);","\t\t\t\t\t\t\ttempNum=\"\";","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tinfixStack.push(parseFloat(tempNum));","\t\t\t\t\tconsole.log(\"Infix Stack\",infixStack);","\t\t\t\t\t","\t\t\t\t\t/*Generating a postfix stack from the infix stack*/","\t\t\t\t\tfor(var i=0;i<infixStack.length;i++){","\t\t\t\t\t\tif(!isOperator(infixStack[i])){","\t\t\t\t\t\t\tpostfixStack.push(infixStack[i]);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tif(tempStack.length==0||(returnPrecedence(infixStack[i])>returnPrecedence(tempStack[tempStack.length-1]))){","\t\t\t\t\t\t\t\ttempStack.push(infixStack[i]);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse{","\t\t\t\t\t\t\t\tif((returnPrecedence(infixStack[i])<=returnPrecedence(tempStack[tempStack.length-1]))){","\t\t\t\t\t\t\t\t\tdo{","\t\t\t\t\t\t\t\t\t\tpostfixStack.push(tempStack.pop());","\t\t\t\t\t\t\t\t\t}while(returnPrecedence(infixStack[i])<=returnPrecedence(tempStack[tempStack.length-1]))","\t\t\t\t\t\t\t\t\t\ttempStack.push(infixStack[i]);","\t\t\t\t\t\t\t\t}\t","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tvar lenTempStack=tempStack.length;","\t\t\t\t\tfor(var i=0;i<lenTempStack;i++){","\t\t\t\t\t\tpostfixStack.push(tempStack.pop());","\t\t\t\t\t}","\t\t\t\t\tconsole.log(\"Postfix Stack\",postfixStack);","\t\t\t\t\tvar evaluatingStack=[];","\t\t\t\t\t","\t\t\t\t\t/*Evaluating the infix stack and generating the output*/","\t\t\t\t\tfor(var i=0;i<postfixStack.length;i++){","\t\t\t\t\t\tif(!isOperator(postfixStack[i])){","\t\t\t\t\t\t\tevaluatingStack.push(postfixStack[i]);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tvar operand2=evaluatingStack.pop();","\t\t\t\t\t\t\tvar operand1=evaluatingStack.pop();","\t\t\t\t\t\t\tvar res=evaluate(operand1,operand2,postfixStack[i]);","\t\t\t\t\t\t\tevaluatingStack.push(res);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tresult=evaluatingStack.pop()","\t\t\t\t\tresult=(Math.round(result * 100000) / 100000);","\t\t\t\t\tpostfixStack=[];","\t\t\t\t}","\t\t\t\t/*Handling the divide by zero, i,e the infinite case*/","\t\t\t\t$(\"#output-text\").val(result);","\t\t\t\tif(isFinite(result)){","\t\t\t\t\tinfixStack=[];","\t\t\t\t\tstack=[];","\t\t\t\t\tstack.push(result);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tinfixStack=[];","\t\t\t\t\tstack=[];","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tcase \"AC\":","\t\t\t\tstack=[];","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;","","\t\t\tcase \"CE\":","\t\t\t\tstack.pop();","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;","","\t\t\tcase \"+\": case \"-\": case \"X\": case \"/\":","\t\t\t\tif(!isOperator(prevValue)){","\t\t\t\t\tstack.push(value);","\t\t\t\t\tdisplayOutput(stack);","\t\t\t\t\thasPointer=false;","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tcase \".\":","\t\t\t\tif(!hasPointer){","\t\t\t\t\tstack.push(value);","\t\t\t\t\tdisplayOutput(stack);","\t\t\t\t\thasPointer=true;","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tdefault:","\t\t\t\tstack.push(value);","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;     ","\t\t}","  }","});",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":207,"column":3},"action":"insert","lines":["    var hasPointer=false;","var num = \"\";","var stack = [];","var infixStack=[];","var prevValue=\"\";","var display = \"\"; ","var tempStack=[];","var postfixString=\"\";","var postfixStack=[];","","","function isOperator(x){","  if(x==\"-\"||x==\"+\"||x==\"X\"||x==\"/\"){","    return 1;","  }","  else return 0;","}","","function isEquals(x){","  if(x==\"=\"){","    return 1;","  }","  else return 0;","}","","function isNumber(x){","  if(x==\"1\"||x==\"2\"||x==\"3\"||x==\"4\"||x==\"5\"||x==\"6\"||x==\"7\"||x==\"8\"||x==\"9\"||x==\"0\"){","    return 1;","  }","  else return 0;","}","","function IsMultiplyOrDivide(x){","\tif(x==\"/\"||x==\"X\"){","\t\treturn true;","\t}","\telse{","\t\treturn false;","\t}","}","","function returnPrecedence(x){","  switch(x){","    case \"+\":","      return 1;","      break;","    case \"-\":","      return 1;","      break;","    case \"X\":","      return 2;","      break;","    case \"/\":","      return 2;","      break;","  }","}","/*Evaluates two operators and returns the result*/","function evaluate(op1,op2,operator){","\tconsole.log(\"Op1,Op2,operator\"+op1,op2,operator);","  switch(operator){","    case \"+\":","      return parseFloat(op1)+parseFloat(op2);","      break;","    case \"-\":","      return parseFloat(op1)-parseFloat(op2);","      break;","    case \"/\":","      return parseFloat(op1)/parseFloat(op2);","      break;","    case \"X\":","      return parseFloat(op1)*parseFloat(op2);","      break;","  }","}","","/*The display function, it needs to be specially handled as the text box is not able to display numbers larger than 15 digits*/","function displayOutput(stack){","\t\tif(stack.length<=15){","\t\t\t$(\"#output-text\").val(stack.join(\"\"));","\t\t}","\t\telse{","\t\t\t$(\"#output-text\").val(stack.join(\"\").slice(stack.length-15,stack.length));","\t\t}","}","/*The main logic for handling the clicks on the calculator*/","$(\".flex-wrapper\").click(function(e) {","  var idClicked = e.target.id;","  var value = $(\"#\" + idClicked).attr(\"value\");","  /*To handle the unexpected clicks in between the buttons*/","  if (value != undefined) {","    prevValue=stack[stack.length-1];","\t\t/*Switching through different cases*/","\t\tswitch(value){","\t\t\tcase \"=\":","\t\t\t\tvar tempNum=\"\";","\t\t\t\tvar result=\"\";","\t\t\t\t/*Handling invalid cases such as ","\t\t\t\t1. If the end of the input is an operator or a decimal point","\t\t\t\t2. If the input length is zero, which is caused by direct clicking of the equals button","\t\t\t\t3. To eliminate case such as / or * being prefix for a number in calculation and allow numbers such as +3 and -3","\t\t\t\t*/","\t\t\t\tif(isOperator(stack[stack.length-1])||stack[stack.length-1]==\".\"||stack.length==0||IsMultiplyOrDivide(stack[0])){","\t\t\t\t\tresult=0;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t/*With the input received, generating the infix stack, as the input from humans are always infix*/","\t\t\t\t\tfor(var i=0;i<stack.length;i++){","\t\t\t\t\t\tif(!isOperator(stack[i])||i==0){","\t\t\t\t\t\t\ttempNum=tempNum+stack[i];","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tinfixStack.push(parseFloat(tempNum));","\t\t\t\t\t\t\tinfixStack.push(stack[i]);","\t\t\t\t\t\t\ttempNum=\"\";","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tinfixStack.push(parseFloat(tempNum));","\t\t\t\t\tconsole.log(\"Infix Stack\",infixStack);","\t\t\t\t\t","\t\t\t\t\t/*Generating a postfix stack from the infix stack*/","\t\t\t\t\tfor(var i=0;i<infixStack.length;i++){","\t\t\t\t\t\tif(!isOperator(infixStack[i])){","\t\t\t\t\t\t\tpostfixStack.push(infixStack[i]);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tif(tempStack.length==0||(returnPrecedence(infixStack[i])>returnPrecedence(tempStack[tempStack.length-1]))){","\t\t\t\t\t\t\t\ttempStack.push(infixStack[i]);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse{","\t\t\t\t\t\t\t\tif((returnPrecedence(infixStack[i])<=returnPrecedence(tempStack[tempStack.length-1]))){","\t\t\t\t\t\t\t\t\tdo{","\t\t\t\t\t\t\t\t\t\tpostfixStack.push(tempStack.pop());","\t\t\t\t\t\t\t\t\t}while(returnPrecedence(infixStack[i])<=returnPrecedence(tempStack[tempStack.length-1]))","\t\t\t\t\t\t\t\t\t\ttempStack.push(infixStack[i]);","\t\t\t\t\t\t\t\t}\t","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tvar lenTempStack=tempStack.length;","\t\t\t\t\tfor(var i=0;i<lenTempStack;i++){","\t\t\t\t\t\tpostfixStack.push(tempStack.pop());","\t\t\t\t\t}","\t\t\t\t\tconsole.log(\"Postfix Stack\",postfixStack);","\t\t\t\t\tvar evaluatingStack=[];","\t\t\t\t\t","\t\t\t\t\t/*Evaluating the infix stack and generating the output*/","\t\t\t\t\tfor(var i=0;i<postfixStack.length;i++){","\t\t\t\t\t\tif(!isOperator(postfixStack[i])){","\t\t\t\t\t\t\tevaluatingStack.push(postfixStack[i]);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tvar operand2=evaluatingStack.pop();","\t\t\t\t\t\t\tvar operand1=evaluatingStack.pop();","\t\t\t\t\t\t\tvar res=evaluate(operand1,operand2,postfixStack[i]);","\t\t\t\t\t\t\tevaluatingStack.push(res);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tresult=evaluatingStack.pop()","\t\t\t\t\tresult=(Math.round(result * 100000) / 100000);","\t\t\t\t\tpostfixStack=[];","\t\t\t\t}","\t\t\t\t/*Handling the divide by zero, i,e the infinite case*/","\t\t\t\t$(\"#output-text\").val(result);","\t\t\t\tif(isFinite(result)){","\t\t\t\t\tinfixStack=[];","\t\t\t\t\tstack=[];","\t\t\t\t\tstack.push(result);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tinfixStack=[];","\t\t\t\t\tstack=[];","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tcase \"AC\":","\t\t\t\tstack=[];","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;","","\t\t\tcase \"CE\":","\t\t\t\tstack.pop();","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;","","\t\t\tcase \"+\": case \"-\": case \"X\": case \"/\":","\t\t\t\tif(!isOperator(prevValue)){","\t\t\t\t\tstack.push(value);","\t\t\t\t\tdisplayOutput(stack);","\t\t\t\t\thasPointer=false;","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tcase \".\":","\t\t\t\tif(!hasPointer){","\t\t\t\t\tstack.push(value);","\t\t\t\t\tdisplayOutput(stack);","\t\t\t\t\thasPointer=true;","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tdefault:","\t\t\t\tstack.push(value);","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;     ","\t\t}","  }","});"]}],[{"start":{"row":86,"column":0},"end":{"row":86,"column":1},"action":"remove","lines":["$"],"id":3}],[{"start":{"row":86,"column":0},"end":{"row":86,"column":1},"action":"insert","lines":["$"],"id":4}],[{"start":{"row":86,"column":0},"end":{"row":86,"column":1},"action":"remove","lines":["$"],"id":5},{"start":{"row":86,"column":0},"end":{"row":86,"column":1},"action":"insert","lines":["$"]}],[{"start":{"row":0,"column":4},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":6},{"start":{"row":1,"column":0},"end":{"row":1,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":1,"column":4},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":2,"column":0},"end":{"row":2,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["/"],"id":8}],[{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["*"],"id":9}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["*"],"id":10}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["/"],"id":11}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["g"],"id":12}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["l"],"id":13}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["o"],"id":14}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["b"],"id":15}],[{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["a"],"id":16}],[{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["l"],"id":17}],[{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":[" "],"id":18}],[{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["\""],"id":19}],[{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["\""],"id":20}],[{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["4"],"id":21}],[{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"remove","lines":["4"],"id":22}],[{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["$"],"id":23}],[{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"remove","lines":["\""],"id":24}],[{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"remove","lines":["\""],"id":25}],[{"start":{"row":0,"column":0},"end":{"row":209,"column":3},"action":"remove","lines":["    /*global $*/","    ","    var hasPointer=false;","var num = \"\";","var stack = [];","var infixStack=[];","var prevValue=\"\";","var display = \"\"; ","var tempStack=[];","var postfixString=\"\";","var postfixStack=[];","","","function isOperator(x){","  if(x==\"-\"||x==\"+\"||x==\"X\"||x==\"/\"){","    return 1;","  }","  else return 0;","}","","function isEquals(x){","  if(x==\"=\"){","    return 1;","  }","  else return 0;","}","","function isNumber(x){","  if(x==\"1\"||x==\"2\"||x==\"3\"||x==\"4\"||x==\"5\"||x==\"6\"||x==\"7\"||x==\"8\"||x==\"9\"||x==\"0\"){","    return 1;","  }","  else return 0;","}","","function IsMultiplyOrDivide(x){","\tif(x==\"/\"||x==\"X\"){","\t\treturn true;","\t}","\telse{","\t\treturn false;","\t}","}","","function returnPrecedence(x){","  switch(x){","    case \"+\":","      return 1;","      break;","    case \"-\":","      return 1;","      break;","    case \"X\":","      return 2;","      break;","    case \"/\":","      return 2;","      break;","  }","}","/*Evaluates two operators and returns the result*/","function evaluate(op1,op2,operator){","\tconsole.log(\"Op1,Op2,operator\"+op1,op2,operator);","  switch(operator){","    case \"+\":","      return parseFloat(op1)+parseFloat(op2);","      break;","    case \"-\":","      return parseFloat(op1)-parseFloat(op2);","      break;","    case \"/\":","      return parseFloat(op1)/parseFloat(op2);","      break;","    case \"X\":","      return parseFloat(op1)*parseFloat(op2);","      break;","  }","}","","/*The display function, it needs to be specially handled as the text box is not able to display numbers larger than 15 digits*/","function displayOutput(stack){","\t\tif(stack.length<=15){","\t\t\t$(\"#output-text\").val(stack.join(\"\"));","\t\t}","\t\telse{","\t\t\t$(\"#output-text\").val(stack.join(\"\").slice(stack.length-15,stack.length));","\t\t}","}","/*The main logic for handling the clicks on the calculator*/","$(\".flex-wrapper\").click(function(e) {","  var idClicked = e.target.id;","  var value = $(\"#\" + idClicked).attr(\"value\");","  /*To handle the unexpected clicks in between the buttons*/","  if (value != undefined) {","    prevValue=stack[stack.length-1];","\t\t/*Switching through different cases*/","\t\tswitch(value){","\t\t\tcase \"=\":","\t\t\t\tvar tempNum=\"\";","\t\t\t\tvar result=\"\";","\t\t\t\t/*Handling invalid cases such as ","\t\t\t\t1. If the end of the input is an operator or a decimal point","\t\t\t\t2. If the input length is zero, which is caused by direct clicking of the equals button","\t\t\t\t3. To eliminate case such as / or * being prefix for a number in calculation and allow numbers such as +3 and -3","\t\t\t\t*/","\t\t\t\tif(isOperator(stack[stack.length-1])||stack[stack.length-1]==\".\"||stack.length==0||IsMultiplyOrDivide(stack[0])){","\t\t\t\t\tresult=0;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t/*With the input received, generating the infix stack, as the input from humans are always infix*/","\t\t\t\t\tfor(var i=0;i<stack.length;i++){","\t\t\t\t\t\tif(!isOperator(stack[i])||i==0){","\t\t\t\t\t\t\ttempNum=tempNum+stack[i];","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tinfixStack.push(parseFloat(tempNum));","\t\t\t\t\t\t\tinfixStack.push(stack[i]);","\t\t\t\t\t\t\ttempNum=\"\";","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tinfixStack.push(parseFloat(tempNum));","\t\t\t\t\tconsole.log(\"Infix Stack\",infixStack);","\t\t\t\t\t","\t\t\t\t\t/*Generating a postfix stack from the infix stack*/","\t\t\t\t\tfor(var i=0;i<infixStack.length;i++){","\t\t\t\t\t\tif(!isOperator(infixStack[i])){","\t\t\t\t\t\t\tpostfixStack.push(infixStack[i]);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tif(tempStack.length==0||(returnPrecedence(infixStack[i])>returnPrecedence(tempStack[tempStack.length-1]))){","\t\t\t\t\t\t\t\ttempStack.push(infixStack[i]);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse{","\t\t\t\t\t\t\t\tif((returnPrecedence(infixStack[i])<=returnPrecedence(tempStack[tempStack.length-1]))){","\t\t\t\t\t\t\t\t\tdo{","\t\t\t\t\t\t\t\t\t\tpostfixStack.push(tempStack.pop());","\t\t\t\t\t\t\t\t\t}while(returnPrecedence(infixStack[i])<=returnPrecedence(tempStack[tempStack.length-1]))","\t\t\t\t\t\t\t\t\t\ttempStack.push(infixStack[i]);","\t\t\t\t\t\t\t\t}\t","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tvar lenTempStack=tempStack.length;","\t\t\t\t\tfor(var i=0;i<lenTempStack;i++){","\t\t\t\t\t\tpostfixStack.push(tempStack.pop());","\t\t\t\t\t}","\t\t\t\t\tconsole.log(\"Postfix Stack\",postfixStack);","\t\t\t\t\tvar evaluatingStack=[];","\t\t\t\t\t","\t\t\t\t\t/*Evaluating the infix stack and generating the output*/","\t\t\t\t\tfor(var i=0;i<postfixStack.length;i++){","\t\t\t\t\t\tif(!isOperator(postfixStack[i])){","\t\t\t\t\t\t\tevaluatingStack.push(postfixStack[i]);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tvar operand2=evaluatingStack.pop();","\t\t\t\t\t\t\tvar operand1=evaluatingStack.pop();","\t\t\t\t\t\t\tvar res=evaluate(operand1,operand2,postfixStack[i]);","\t\t\t\t\t\t\tevaluatingStack.push(res);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tresult=evaluatingStack.pop()","\t\t\t\t\tresult=(Math.round(result * 100000) / 100000);","\t\t\t\t\tpostfixStack=[];","\t\t\t\t}","\t\t\t\t/*Handling the divide by zero, i,e the infinite case*/","\t\t\t\t$(\"#output-text\").val(result);","\t\t\t\tif(isFinite(result)){","\t\t\t\t\tinfixStack=[];","\t\t\t\t\tstack=[];","\t\t\t\t\tstack.push(result);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tinfixStack=[];","\t\t\t\t\tstack=[];","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tcase \"AC\":","\t\t\t\tstack=[];","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;","","\t\t\tcase \"CE\":","\t\t\t\tstack.pop();","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;","","\t\t\tcase \"+\": case \"-\": case \"X\": case \"/\":","\t\t\t\tif(!isOperator(prevValue)){","\t\t\t\t\tstack.push(value);","\t\t\t\t\tdisplayOutput(stack);","\t\t\t\t\thasPointer=false;","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tcase \".\":","\t\t\t\tif(!hasPointer){","\t\t\t\t\tstack.push(value);","\t\t\t\t\tdisplayOutput(stack);","\t\t\t\t\thasPointer=true;","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tdefault:","\t\t\t\tstack.push(value);","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;     ","\t\t}","  }","});"],"id":26}],[{"start":{"row":0,"column":0},"end":{"row":207,"column":3},"action":"insert","lines":["var hasPointer=false;","var num = \"\";","var stack = [];","var infixStack=[];","var prevValue=\"\";","var display = \"\"; ","var tempStack=[];","var postfixString=\"\";","var postfixStack=[];","","","function isOperator(x){","  if(x==\"-\"||x==\"+\"||x==\"X\"||x==\"/\"){","    return 1;","  }","  else return 0;","}","","function isEquals(x){","  if(x==\"=\"){","    return 1;","  }","  else return 0;","}","","function isNumber(x){","  if(x==\"1\"||x==\"2\"||x==\"3\"||x==\"4\"||x==\"5\"||x==\"6\"||x==\"7\"||x==\"8\"||x==\"9\"||x==\"0\"){","    return 1;","  }","  else return 0;","}","","function IsMultiplyOrDivide(x){","\tif(x==\"/\"||x==\"X\"){","\t\treturn true;","\t}","\telse{","\t\treturn false;","\t}","}","","function returnPrecedence(x){","  switch(x){","    case \"+\":","      return 1;","      break;","    case \"-\":","      return 1;","      break;","    case \"X\":","      return 2;","      break;","    case \"/\":","      return 2;","      break;","  }","}","/*Evaluates two operators and returns the result*/","function evaluate(op1,op2,operator){","\tconsole.log(\"Op1,Op2,operator\"+op1,op2,operator);","  switch(operator){","    case \"+\":","      return parseFloat(op1)+parseFloat(op2);","      break;","    case \"-\":","      return parseFloat(op1)-parseFloat(op2);","      break;","    case \"/\":","      return parseFloat(op1)/parseFloat(op2);","      break;","    case \"X\":","      return parseFloat(op1)*parseFloat(op2);","      break;","  }","}","","/*The display function, it needs to be specially handled as the text box is not able to display numbers larger than 15 digits*/","function displayOutput(stack){","\t\tif(stack.length<=15){","\t\t\t$(\"#output-text\").val(stack.join(\"\"));","\t\t}","\t\telse{","\t\t\t$(\"#output-text\").val(stack.join(\"\").slice(stack.length-15,stack.length));","\t\t}","}","/*The main logic for handling the clicks on the calculator*/","$(\".flex-wrapper\").click(function(e) {","  var idClicked = e.target.id;","  var value = $(\"#\" + idClicked).attr(\"value\");","  /*To handle the unexpected clicks in between the buttons*/","  if (value != undefined) {","    prevValue=stack[stack.length-1];","\t\t/*Switching through different cases*/","\t\tswitch(value){","\t\t\tcase \"=\":","\t\t\t\tvar tempNum=\"\";","\t\t\t\tvar result=\"\";","\t\t\t\t/*Handling invalid cases such as ","\t\t\t\t1. If the end of the input is an operator or a decimal point","\t\t\t\t2. If the input length is zero, which is caused by direct clicking of the equals button","\t\t\t\t3. To eliminate case such as / or * being prefix for a number in calculation and allow numbers such as +3 and -3","\t\t\t\t*/","\t\t\t\tif(isOperator(stack[stack.length-1])||stack[stack.length-1]==\".\"||stack.length==0||IsMultiplyOrDivide(stack[0])){","\t\t\t\t\tresult=0;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t/*With the input received, generating the infix stack, as the input from humans are always infix*/","\t\t\t\t\tfor(var i=0;i<stack.length;i++){","\t\t\t\t\t\tif(!isOperator(stack[i])||i==0){","\t\t\t\t\t\t\ttempNum=tempNum+stack[i];","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tinfixStack.push(parseFloat(tempNum));","\t\t\t\t\t\t\tinfixStack.push(stack[i]);","\t\t\t\t\t\t\ttempNum=\"\";","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tinfixStack.push(parseFloat(tempNum));","\t\t\t\t\tconsole.log(\"Infix Stack\",infixStack);","\t\t\t\t\t","\t\t\t\t\t/*Generating a postfix stack from the infix stack*/","\t\t\t\t\tfor(var i=0;i<infixStack.length;i++){","\t\t\t\t\t\tif(!isOperator(infixStack[i])){","\t\t\t\t\t\t\tpostfixStack.push(infixStack[i]);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tif(tempStack.length==0||(returnPrecedence(infixStack[i])>returnPrecedence(tempStack[tempStack.length-1]))){","\t\t\t\t\t\t\t\ttempStack.push(infixStack[i]);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse{","\t\t\t\t\t\t\t\tif((returnPrecedence(infixStack[i])<=returnPrecedence(tempStack[tempStack.length-1]))){","\t\t\t\t\t\t\t\t\tdo{","\t\t\t\t\t\t\t\t\t\tpostfixStack.push(tempStack.pop());","\t\t\t\t\t\t\t\t\t}while(returnPrecedence(infixStack[i])<=returnPrecedence(tempStack[tempStack.length-1]))","\t\t\t\t\t\t\t\t\t\ttempStack.push(infixStack[i]);","\t\t\t\t\t\t\t\t}\t","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tvar lenTempStack=tempStack.length;","\t\t\t\t\tfor(var i=0;i<lenTempStack;i++){","\t\t\t\t\t\tpostfixStack.push(tempStack.pop());","\t\t\t\t\t}","\t\t\t\t\tconsole.log(\"Postfix Stack\",postfixStack);","\t\t\t\t\tvar evaluatingStack=[];","\t\t\t\t\t","\t\t\t\t\t/*Evaluating the infix stack and generating the output*/","\t\t\t\t\tfor(var i=0;i<postfixStack.length;i++){","\t\t\t\t\t\tif(!isOperator(postfixStack[i])){","\t\t\t\t\t\t\tevaluatingStack.push(postfixStack[i]);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tvar operand2=evaluatingStack.pop();","\t\t\t\t\t\t\tvar operand1=evaluatingStack.pop();","\t\t\t\t\t\t\tvar res=evaluate(operand1,operand2,postfixStack[i]);","\t\t\t\t\t\t\tevaluatingStack.push(res);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tresult=evaluatingStack.pop()","\t\t\t\t\tresult=(Math.round(result * 100000) / 100000);","\t\t\t\t\tpostfixStack=[];","\t\t\t\t}","\t\t\t\t/*Handling the divide by zero, i,e the infinite case*/","\t\t\t\t$(\"#output-text\").val(result);","\t\t\t\tif(isFinite(result)){","\t\t\t\t\tinfixStack=[];","\t\t\t\t\tstack=[];","\t\t\t\t\tstack.push(result);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tinfixStack=[];","\t\t\t\t\tstack=[];","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tcase \"AC\":","\t\t\t\tstack=[];","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;","","\t\t\tcase \"CE\":","\t\t\t\tstack.pop();","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;","","\t\t\tcase \"+\": case \"-\": case \"X\": case \"/\":","\t\t\t\tif(!isOperator(prevValue)){","\t\t\t\t\tstack.push(value);","\t\t\t\t\tdisplayOutput(stack);","\t\t\t\t\thasPointer=false;","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tcase \".\":","\t\t\t\tif(!hasPointer){","\t\t\t\t\tstack.push(value);","\t\t\t\t\tdisplayOutput(stack);","\t\t\t\t\thasPointer=true;","\t\t\t\t}","\t\t\t\tbreak;","","\t\t\tdefault:","\t\t\t\tstack.push(value);","\t\t\t\tdisplayOutput(stack);","\t\t\t\tbreak;     ","\t\t}","  }","});"],"id":27}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":28}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["/"],"id":29}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["*"],"id":30}],[{"start":{"row":0,"column":2},"end":{"row":0,"column":4},"action":"insert","lines":["()"],"id":31}],[{"start":{"row":0,"column":2},"end":{"row":0,"column":4},"action":"remove","lines":["()"],"id":32}],[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["*"],"id":33}],[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["/"],"id":34}],[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["g"],"id":35}],[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["l"],"id":36}],[{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["o"],"id":37}],[{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["a"],"id":38}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["b"],"id":39}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":[" "],"id":40}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"remove","lines":[" "],"id":41}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"remove","lines":["b"],"id":42}],[{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"remove","lines":["a"],"id":43}],[{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["b"],"id":44}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["a"],"id":45}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["l"],"id":46}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":[" "],"id":47}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["$"],"id":48}],[{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["v"],"id":49}],[{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"remove","lines":["v"],"id":50}],[{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":[" "],"id":51}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":17,"column":1},"end":{"row":17,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":241,"mode":"ace/mode/javascript"}},"timestamp":1518802677920,"hash":"b1971080b44207761cf0c023667c43d692d66e92"}